// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bryanl/ksonnet-registry/models"
)

// PullPackageJSONOKCode is the HTTP code returned for type PullPackageJSONOK
const PullPackageJSONOKCode int = 200

/*PullPackageJSONOK successful operation

swagger:response pullPackageJsonOK
*/
type PullPackageJSONOK struct {

	/*
	  In: Body
	*/
	Payload *models.PullJSON `json:"body,omitempty"`
}

// NewPullPackageJSONOK creates PullPackageJSONOK with default headers values
func NewPullPackageJSONOK() *PullPackageJSONOK {
	return &PullPackageJSONOK{}
}

// WithPayload adds the payload to the pull package Json o k response
func (o *PullPackageJSONOK) WithPayload(payload *models.PullJSON) *PullPackageJSONOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pull package Json o k response
func (o *PullPackageJSONOK) SetPayload(payload *models.PullJSON) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PullPackageJSONOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PullPackageJSONUnauthorizedCode is the HTTP code returned for type PullPackageJSONUnauthorized
const PullPackageJSONUnauthorizedCode int = 401

/*PullPackageJSONUnauthorized Not authorized to read the package

swagger:response pullPackageJsonUnauthorized
*/
type PullPackageJSONUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPullPackageJSONUnauthorized creates PullPackageJSONUnauthorized with default headers values
func NewPullPackageJSONUnauthorized() *PullPackageJSONUnauthorized {
	return &PullPackageJSONUnauthorized{}
}

// WithPayload adds the payload to the pull package Json unauthorized response
func (o *PullPackageJSONUnauthorized) WithPayload(payload *models.Error) *PullPackageJSONUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pull package Json unauthorized response
func (o *PullPackageJSONUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PullPackageJSONUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PullPackageJSONNotFoundCode is the HTTP code returned for type PullPackageJSONNotFound
const PullPackageJSONNotFoundCode int = 404

/*PullPackageJSONNotFound Package not found

swagger:response pullPackageJsonNotFound
*/
type PullPackageJSONNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPullPackageJSONNotFound creates PullPackageJSONNotFound with default headers values
func NewPullPackageJSONNotFound() *PullPackageJSONNotFound {
	return &PullPackageJSONNotFound{}
}

// WithPayload adds the payload to the pull package Json not found response
func (o *PullPackageJSONNotFound) WithPayload(payload *models.Error) *PullPackageJSONNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pull package Json not found response
func (o *PullPackageJSONNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PullPackageJSONNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
