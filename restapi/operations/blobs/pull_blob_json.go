// Code generated by go-swagger; DO NOT EDIT.

package blobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PullBlobJSONHandlerFunc turns a function with the right signature into a pull blob Json handler
type PullBlobJSONHandlerFunc func(PullBlobJSONParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PullBlobJSONHandlerFunc) Handle(params PullBlobJSONParams) middleware.Responder {
	return fn(params)
}

// PullBlobJSONHandler interface for that can handle valid pull blob Json params
type PullBlobJSONHandler interface {
	Handle(PullBlobJSONParams) middleware.Responder
}

// NewPullBlobJSON creates a new http.Handler for the pull blob Json operation
func NewPullBlobJSON(ctx *middleware.Context, handler PullBlobJSONHandler) *PullBlobJSON {
	return &PullBlobJSON{Context: ctx, Handler: handler}
}

/*PullBlobJSON swagger:route GET /api/v1/packages/{namespace}/{package}/blobs/sha256/{digest}/json blobs pullBlobJson

Pull a package blob by digest

*/
type PullBlobJSON struct {
	Context *middleware.Context
	Handler PullBlobJSONHandler
}

func (o *PullBlobJSON) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPullBlobJSONParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
