// Code generated by go-swagger; DO NOT EDIT.

package channel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bryanl/ksonnet-registry/models"
)

// CreateChannelOKCode is the HTTP code returned for type CreateChannelOK
const CreateChannelOKCode int = 200

/*CreateChannelOK successful operation

swagger:response createChannelOK
*/
type CreateChannelOK struct {

	/*
	  In: Body
	*/
	Payload *models.Channel `json:"body,omitempty"`
}

// NewCreateChannelOK creates CreateChannelOK with default headers values
func NewCreateChannelOK() *CreateChannelOK {
	return &CreateChannelOK{}
}

// WithPayload adds the payload to the create channel o k response
func (o *CreateChannelOK) WithPayload(payload *models.Channel) *CreateChannelOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create channel o k response
func (o *CreateChannelOK) SetPayload(payload *models.Channel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateChannelOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateChannelUnauthorizedCode is the HTTP code returned for type CreateChannelUnauthorized
const CreateChannelUnauthorizedCode int = 401

/*CreateChannelUnauthorized Not authorized to create the channel

swagger:response createChannelUnauthorized
*/
type CreateChannelUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateChannelUnauthorized creates CreateChannelUnauthorized with default headers values
func NewCreateChannelUnauthorized() *CreateChannelUnauthorized {
	return &CreateChannelUnauthorized{}
}

// WithPayload adds the payload to the create channel unauthorized response
func (o *CreateChannelUnauthorized) WithPayload(payload *models.Error) *CreateChannelUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create channel unauthorized response
func (o *CreateChannelUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateChannelUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateChannelNotFoundCode is the HTTP code returned for type CreateChannelNotFound
const CreateChannelNotFoundCode int = 404

/*CreateChannelNotFound Package not found

swagger:response createChannelNotFound
*/
type CreateChannelNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateChannelNotFound creates CreateChannelNotFound with default headers values
func NewCreateChannelNotFound() *CreateChannelNotFound {
	return &CreateChannelNotFound{}
}

// WithPayload adds the payload to the create channel not found response
func (o *CreateChannelNotFound) WithPayload(payload *models.Error) *CreateChannelNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create channel not found response
func (o *CreateChannelNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateChannelNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateChannelConflictCode is the HTTP code returned for type CreateChannelConflict
const CreateChannelConflictCode int = 409

/*CreateChannelConflict Channel already exists

swagger:response createChannelConflict
*/
type CreateChannelConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateChannelConflict creates CreateChannelConflict with default headers values
func NewCreateChannelConflict() *CreateChannelConflict {
	return &CreateChannelConflict{}
}

// WithPayload adds the payload to the create channel conflict response
func (o *CreateChannelConflict) WithPayload(payload *models.Error) *CreateChannelConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create channel conflict response
func (o *CreateChannelConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateChannelConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
