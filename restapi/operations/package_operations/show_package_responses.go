// Code generated by go-swagger; DO NOT EDIT.

package package_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bryanl/ksonnet-registry/models"
)

// ShowPackageOKCode is the HTTP code returned for type ShowPackageOK
const ShowPackageOKCode int = 200

/*ShowPackageOK successful operation

swagger:response showPackageOK
*/
type ShowPackageOK struct {

	/*
	  In: Body
	*/
	Payload *models.Package `json:"body,omitempty"`
}

// NewShowPackageOK creates ShowPackageOK with default headers values
func NewShowPackageOK() *ShowPackageOK {
	return &ShowPackageOK{}
}

// WithPayload adds the payload to the show package o k response
func (o *ShowPackageOK) WithPayload(payload *models.Package) *ShowPackageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show package o k response
func (o *ShowPackageOK) SetPayload(payload *models.Package) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowPackageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ShowPackageUnauthorizedCode is the HTTP code returned for type ShowPackageUnauthorized
const ShowPackageUnauthorizedCode int = 401

/*ShowPackageUnauthorized Not authorized to read the package

swagger:response showPackageUnauthorized
*/
type ShowPackageUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewShowPackageUnauthorized creates ShowPackageUnauthorized with default headers values
func NewShowPackageUnauthorized() *ShowPackageUnauthorized {
	return &ShowPackageUnauthorized{}
}

// WithPayload adds the payload to the show package unauthorized response
func (o *ShowPackageUnauthorized) WithPayload(payload *models.Error) *ShowPackageUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show package unauthorized response
func (o *ShowPackageUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowPackageUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ShowPackageNotFoundCode is the HTTP code returned for type ShowPackageNotFound
const ShowPackageNotFoundCode int = 404

/*ShowPackageNotFound Package not found

swagger:response showPackageNotFound
*/
type ShowPackageNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewShowPackageNotFound creates ShowPackageNotFound with default headers values
func NewShowPackageNotFound() *ShowPackageNotFound {
	return &ShowPackageNotFound{}
}

// WithPayload adds the payload to the show package not found response
func (o *ShowPackageNotFound) WithPayload(payload *models.Error) *ShowPackageNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show package not found response
func (o *ShowPackageNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowPackageNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
