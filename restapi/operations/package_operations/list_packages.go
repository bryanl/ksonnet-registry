// Code generated by go-swagger; DO NOT EDIT.

package package_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListPackagesHandlerFunc turns a function with the right signature into a list packages handler
type ListPackagesHandlerFunc func(ListPackagesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListPackagesHandlerFunc) Handle(params ListPackagesParams) middleware.Responder {
	return fn(params)
}

// ListPackagesHandler interface for that can handle valid list packages params
type ListPackagesHandler interface {
	Handle(ListPackagesParams) middleware.Responder
}

// NewListPackages creates a new http.Handler for the list packages operation
func NewListPackages(ctx *middleware.Context, handler ListPackagesHandler) *ListPackages {
	return &ListPackages{Context: ctx, Handler: handler}
}

/*ListPackages swagger:route GET /api/v1/packages package listPackages

List packages

*/
type ListPackages struct {
	Context *middleware.Context
	Handler ListPackagesHandler
}

func (o *ListPackages) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListPackagesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
