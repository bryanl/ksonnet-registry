// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import repository "github.com/bryanl/ksonnet-registry/repository"

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Namespace provides a mock function with given fields:
func (_m *Repository) Namespace() repository.NamespaceRepository {
	ret := _m.Called()

	var r0 repository.NamespaceRepository
	if rf, ok := ret.Get(0).(func() repository.NamespaceRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.NamespaceRepository)
		}
	}

	return r0
}

// Package provides a mock function with given fields:
func (_m *Repository) Package() repository.PackageRepository {
	ret := _m.Called()

	var r0 repository.PackageRepository
	if rf, ok := ret.Get(0).(func() repository.PackageRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.PackageRepository)
		}
	}

	return r0
}

// Release provides a mock function with given fields:
func (_m *Repository) Release() repository.ReleaseRepository {
	ret := _m.Called()

	var r0 repository.ReleaseRepository
	if rf, ok := ret.Get(0).(func() repository.ReleaseRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.ReleaseRepository)
		}
	}

	return r0
}
